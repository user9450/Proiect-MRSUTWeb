@model eUseControl.Domain.Entities.Orders.Order

@{
     ViewBag.Title = "UserAddress";
     Layout = "~/Views/Shared/_Layout.cshtml";
}

<main>
     <section class="useraddress-section">
          <div class="useraddress-container">
               @using (Html.BeginForm("BuyPhysicalCopy", "Order", FormMethod.Post, new { id = "addressForm" }))
               {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                         <label for="UserAddress">Adresa</label>
                         @Html.EditorFor(model => model.UserAddress, new { htmlAttributes = new { required = "required", minlength = "5", maxlength = "30" } })
                         <span class="text-danger" id="addressError"></span>
                    </div>
                    <div class="form-group">
                         <label for="UserIndex">Index</label>
                         @Html.EditorFor(model => model.UserIndex, new { htmlAttributes = new { required = "required", minlength = "3", maxlength = "10" } })
                         <span class="text-danger" id="indexError"></span>
                    </div>
                    <div class="form-group">
                         <label for="UserPhoneNumber">Phone Number</label>
                         @Html.EditorFor(model => model.UserPhoneNumber, new { htmlAttributes = new { required = "required", minlength = "8", maxlength = "15" } })
                         <span class="text-danger" id="phonenumberError"></span>
                    </div>
                    <input type="submit" value="Buy" class="btn btn-primary" />
               }
          </div>
     </section>
</main>

<script>
     document.getElementById('addressForm').addEventListener('submit', function (event) {
          var isValid = true;
          document.getElementById('addressError').textContent = '';
          document.getElementById('indexError').textContent = '';
          document.getElementById('phonenumberError').textContent = '';

          var useraddress = document.getElementById('UserAddress').value;
          if (useraddress.length < 5 || useraddress.length > 30) {
               isValid = false;
               document.getElementById('addressError').textContent = 'Adresa trebuie să aibă între 5 și 30 caractere.';
          }

          var userindex = document.getElementById('UserIndex').value;
          if (userindex.length < 3 || userindex.length > 10) {
               isValid = false;
               document.getElementById('indexError').textContent = 'Indexul trebuie să aibă între 3 și 10 caractere.';
          }

          var userphonenumber = document.getElementById('UserPhoneNumber').value;
          if (userphonenumber.length < 8 || userphonenumber.length > 15) {
               isValid = false;
               document.getElementById('phonenumberError').textContent = 'Numarul de telefon trebuie să aibă între 8 și 15 caractere.';
          }

          if (!isValid) {
               event.preventDefault();
          }
     }
</script>

